
entry.out.o：     文件格式 elf32-i386


Disassembly of section .text:

0000c400 <start>:
    c400:	31 c0                	xor    %eax,%eax
    c402:	8e d8                	mov    %eax,%ds
    c404:	8e c0                	mov    %eax,%es
    c406:	8e d0                	mov    %eax,%ss
    c408:	c6 06 f0             	movb   $0xf0,(%esi)
    c40b:	0f 0a                	(bad)  
    c40d:	b8 00 90 8e c0       	mov    $0xc08e9000,%eax
    c412:	bf 00 00 b8 00       	mov    $0xb80000,%edi
    c417:	4f                   	dec    %edi
    c418:	cd 10                	int    $0x10
    c41a:	83 f8 4f             	cmp    $0x4f,%eax
    c41d:	75 52                	jne    c471 <scrn320>
    c41f:	26 8b 45 04          	mov    %es:0x4(%ebp),%eax
    c423:	3d 00 02 72 49       	cmp    $0x49720200,%eax
    c428:	b9 05 01 b8 01       	mov    $0x1b80105,%ecx
    c42d:	4f                   	dec    %edi
    c42e:	cd 10                	int    $0x10
    c430:	83 f8 4f             	cmp    $0x4f,%eax
    c433:	75 3c                	jne    c471 <scrn320>
    c435:	26 80 7d 19 08       	cmpb   $0x8,%es:0x19(%ebp)
    c43a:	75 35                	jne    c471 <scrn320>
    c43c:	26 80 7d 1b 04       	cmpb   $0x4,%es:0x1b(%ebp)
    c441:	75 2e                	jne    c471 <scrn320>
    c443:	26 8b 05 25 80 00 74 	mov    %es:0x74008025,%eax
    c44a:	26 bb 05 41 b8 02    	es mov $0x2b84105,%ebx

0000c44b <largescrn>:
    c44b:	bb 05 41 b8 02       	mov    $0x2b84105,%ebx
    c450:	4f                   	dec    %edi
    c451:	cd 10                	int    $0x10
    c453:	c6 06 f2             	movb   $0xf2,(%esi)
    c456:	0f 08                	invd   
    c458:	26 8b 45 12          	mov    %es:0x12(%ebp),%eax
    c45c:	a3 f4 0f 26 8b       	mov    %eax,0x8b260ff4
    c461:	45                   	inc    %ebp
    c462:	14 a3                	adc    $0xa3,%al
    c464:	f6                   	(bad)  
    c465:	0f 26                	(bad)  
    c467:	66 8b 45 28          	mov    0x28(%ebp),%ax
    c46b:	66 a3 f8 0f eb 20    	mov    %ax,0x20eb0ff8

0000c471 <scrn320>:
    c471:	b0 13                	mov    $0x13,%al
    c473:	b4 00                	mov    $0x0,%ah
    c475:	cd 10                	int    $0x10
    c477:	c6 06 f2             	movb   $0xf2,(%esi)
    c47a:	0f 08                	invd   
    c47c:	c7 06 f4 0f 40 01    	movl   $0x1400ff4,(%esi)
    c482:	c7 06 f6 0f c8 00    	movl   $0xc80ff6,(%esi)
    c488:	66 c7 06 f8 0f       	movw   $0xff8,(%esi)
    c48d:	00 00                	add    %al,(%eax)
    c48f:	0a 00                	or     (%eax),%al

0000c491 <keystatus>:
    c491:	b4 02                	mov    $0x2,%ah
    c493:	cd 16                	int    $0x16
    c495:	a2 f1 0f be da       	mov    %al,0xdabe0ff1
    c49a:	c4                   	(bad)  
    c49b:	e8 69 00 be f6       	call   f6bec509 <_end+0xf6bdff4d>
    c4a0:	c4                   	(bad)  
    c4a1:	e8 63 00 b0 ff       	call   ffb0c509 <_end+0xffafff4d>
    c4a6:	e6 21                	out    %al,$0x21
    c4a8:	90                   	nop
    c4a9:	e6 a1                	out    %al,$0xa1
    c4ab:	fa                   	cli    

0000c4ac <seta20.1>:
    c4ac:	e4 64                	in     $0x64,%al
    c4ae:	a8 02                	test   $0x2,%al
    c4b0:	75 fa                	jne    c4ac <seta20.1>
    c4b2:	b0 d1                	mov    $0xd1,%al
    c4b4:	e6 64                	out    %al,$0x64

0000c4b6 <seta20.2>:
    c4b6:	e4 64                	in     $0x64,%al
    c4b8:	a8 02                	test   $0x2,%al
    c4ba:	75 fa                	jne    c4b6 <seta20.2>
    c4bc:	b0 df                	mov    $0xdf,%al
    c4be:	e6 60                	out    %al,$0x60
    c4c0:	0f 01 16             	lgdtl  (%esi)
    c4c3:	b4 c5                	mov    $0xc5,%ah
    c4c5:	0f 20 c0             	mov    %cr0,%eax
    c4c8:	66 25 ff ff          	and    $0xffff,%ax
    c4cc:	ff                   	(bad)  
    c4cd:	7f 66                	jg     c535 <protcseg+0x1b>
    c4cf:	83 c8 01             	or     $0x1,%eax
    c4d2:	0f 22 c0             	mov    %eax,%cr0
    c4d5:	ea 1a c5 10 00 0d 0a 	ljmp   $0xa0d,$0x10c51a

0000c4da <msg>:
    c4da:	0d 0a 0a 0d 6d       	or     $0x6d0d0a0a,%eax
    c4df:	79 20                	jns    c501 <try+0xb>
    c4e1:	6b 65 72 6e          	imul   $0x6e,0x72(%ebp),%esp
    c4e5:	65 6c                	gs insb (%dx),%es:(%edi)
    c4e7:	20 69 73             	and    %ch,0x73(%ecx)
    c4ea:	20 72 75             	and    %dh,0x75(%edx)
    c4ed:	6e                   	outsb  %ds:(%esi),(%dx)
    c4ee:	69 6e 67 20 6a 6f 73 	imul   $0x736f6a20,0x67(%esi),%ebp
	...

0000c4f6 <try>:
    c4f6:	0d 0a 0a 0d 74       	or     $0x740d0a0a,%eax
    c4fb:	72 79                	jb     c576 <protcseg+0x5c>
    c4fd:	20 69 74             	and    %ch,0x74(%ecx)
    c500:	20 61 67             	and    %ah,0x67(%ecx)
    c503:	61                   	popa   
    c504:	69 6e 00 8a 04 83 c6 	imul   $0xc683048a,0x0(%esi),%ebp

0000c507 <puts>:
    c507:	8a 04 83             	mov    (%ebx,%eax,4),%al
    c50a:	c6 01 3c             	movb   $0x3c,(%ecx)
    c50d:	00 74 09 b4          	add    %dh,-0x4c(%ecx,%ecx,1)
    c511:	0e                   	push   %cs
    c512:	bb 0f 00 cd 10       	mov    $0x10cd000f,%ebx
    c517:	eb ee                	jmp    c507 <puts>

0000c519 <over>:
    c519:	c3                   	ret    

0000c51a <protcseg>:
    c51a:	66 b8 08 00          	mov    $0x8,%ax
    c51e:	8e d8                	mov    %eax,%ds
    c520:	8e c0                	mov    %eax,%es
    c522:	8e e0                	mov    %eax,%fs
    c524:	8e e8                	mov    %eax,%gs
    c526:	8e d0                	mov    %eax,%ss
    c528:	bc ff ff 3f 00       	mov    $0x3fffff,%esp
    c52d:	be ba c5 00 00       	mov    $0xc5ba,%esi
    c532:	bf 00 00 28 00       	mov    $0x280000,%edi
    c537:	b9 00 00 02 00       	mov    $0x20000,%ecx
    c53c:	e8 43 00 00 00       	call   c584 <memcpy>
    c541:	be 00 7c 00 00       	mov    $0x7c00,%esi
    c546:	bf 00 00 10 00       	mov    $0x100000,%edi
    c54b:	b9 80 00 00 00       	mov    $0x80,%ecx
    c550:	e8 2f 00 00 00       	call   c584 <memcpy>
    c555:	be 00 82 00 00       	mov    $0x8200,%esi
    c55a:	bf 00 02 10 00       	mov    $0x100200,%edi
    c55f:	b9 00 00 00 00       	mov    $0x0,%ecx
    c564:	8a 0d f0 0f 00 00    	mov    0xff0,%cl
    c56a:	69 c9 00 12 00 00    	imul   $0x1200,%ecx,%ecx
    c570:	81 e9 80 00 00 00    	sub    $0x80,%ecx
    c576:	e8 09 00 00 00       	call   c584 <memcpy>
    c57b:	ea 00 00 00 00 18 00 	ljmp   $0x18,$0x0

0000c582 <spin>:
    c582:	eb fe                	jmp    c582 <spin>

0000c584 <memcpy>:
    c584:	8b 06                	mov    (%esi),%eax
    c586:	83 c6 04             	add    $0x4,%esi
    c589:	89 07                	mov    %eax,(%edi)
    c58b:	83 c7 04             	add    $0x4,%edi
    c58e:	83 e9 01             	sub    $0x1,%ecx
    c591:	75 f1                	jne    c584 <memcpy>
    c593:	c3                   	ret    

0000c594 <gdt>:
	...
    c59c:	ff                   	(bad)  
    c59d:	ff 00                	incl   (%eax)
    c59f:	00 00                	add    %al,(%eax)
    c5a1:	92                   	xchg   %eax,%edx
    c5a2:	cf                   	iret   
    c5a3:	00 ff                	add    %bh,%bh
    c5a5:	ff 00                	incl   (%eax)
    c5a7:	00 00                	add    %al,(%eax)
    c5a9:	9a cf 00 7f 00 00 00 	lcall  $0x0,$0x7f00cf
    c5b0:	28 9a c0 00 1f 00    	sub    %bl,0x1f00c0(%edx)

0000c5b4 <gdtdesc>:
    c5b4:	1f                   	pop    %ds
    c5b5:	00                   	.byte 0x0
    c5b6:	94                   	xchg   %eax,%esp
    c5b7:	c5 00                	lds    (%eax),%eax
	...
