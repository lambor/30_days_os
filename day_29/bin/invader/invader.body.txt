
invader.body.oÔºö     Êñá‰ª∂Ê†ºÂºè elf32-i386


Disassembly of section .text:

00000040 <bin_entry>:
  40:	e8 05 00 00 00       	call   4a <binmain>
  45:	e8 be 09 00 00       	call   a08 <api_end>

0000004a <binmain>:
	0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00
};
/* invader:"abcd", fighter:"efg", laser:"h" */

void binmain(void)
{
  4a:	55                   	push   %ebp
  4b:	89 e5                	mov    %esp,%ebp
  4d:	81 ec b8 57 01 00    	sub    $0x157b8,%esp
	int win, timer, i, j, fx, laserwait, lx = 0, ly;
  53:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
	int ix, iy, movewait0, movewait, idir;
	int invline, score, high, point;
	char winbuf[336 * 261], invstr[32 * 6], s[12], keyflag[4], *p;
	static char invstr0[32] = " abcd abcd abcd abcd abcd ";

	win = api_openwin(winbuf, 336, 261, -1, "invader");
  5a:	83 ec 0c             	sub    $0xc,%esp
  5d:	68 00 00 10 00       	push   $0x100000
  62:	6a ff                	push   $0xffffffff
  64:	68 05 01 00 00       	push   $0x105
  69:	68 50 01 00 00       	push   $0x150
  6e:	8d 85 20 a9 fe ff    	lea    -0x156e0(%ebp),%eax
  74:	50                   	push   %eax
  75:	e8 9b 09 00 00       	call   a15 <api_openwin>
  7a:	83 c4 20             	add    $0x20,%esp
  7d:	89 45 b4             	mov    %eax,-0x4c(%ebp)
	api_boxfilwin(win, 6, 27, 329, 254, 0);
  80:	83 ec 08             	sub    $0x8,%esp
  83:	6a 00                	push   $0x0
  85:	68 fe 00 00 00       	push   $0xfe
  8a:	68 49 01 00 00       	push   $0x149
  8f:	6a 1b                	push   $0x1b
  91:	6a 06                	push   $0x6
  93:	ff 75 b4             	pushl  -0x4c(%ebp)
  96:	e8 c4 09 00 00       	call   a5f <api_boxfilwin>
  9b:	83 c4 20             	add    $0x20,%esp
	timer = api_alloctimer();
  9e:	e8 b5 0a 00 00       	call   b58 <api_alloctimer>
  a3:	89 45 b0             	mov    %eax,-0x50(%ebp)
	api_inittimer(timer, 128);
  a6:	83 ec 08             	sub    $0x8,%esp
  a9:	68 80 00 00 00       	push   $0x80
  ae:	ff 75 b0             	pushl  -0x50(%ebp)
  b1:	e8 aa 0a 00 00       	call   b60 <api_inittimer>
  b6:	83 c4 10             	add    $0x10,%esp

	high = 0;
  b9:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
	putstr(win, winbuf, 22, 0, 7, "HIGH:00000000");
  c0:	83 ec 08             	sub    $0x8,%esp
  c3:	68 08 00 10 00       	push   $0x100008
  c8:	6a 07                	push   $0x7
  ca:	6a 00                	push   $0x0
  cc:	6a 16                	push   $0x16
  ce:	8d 85 20 a9 fe ff    	lea    -0x156e0(%ebp),%eax
  d4:	50                   	push   %eax
  d5:	ff 75 b4             	pushl  -0x4c(%ebp)
  d8:	e8 c5 05 00 00       	call   6a2 <putstr>
  dd:	83 c4 20             	add    $0x20,%esp

restart:
	score = 0;
  e0:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
	point = 1;
  e7:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%ebp)
	putstr(win, winbuf,  4, 0, 7, "SCORE:00000000");
  ee:	83 ec 08             	sub    $0x8,%esp
  f1:	68 16 00 10 00       	push   $0x100016
  f6:	6a 07                	push   $0x7
  f8:	6a 00                	push   $0x0
  fa:	6a 04                	push   $0x4
  fc:	8d 85 20 a9 fe ff    	lea    -0x156e0(%ebp),%eax
 102:	50                   	push   %eax
 103:	ff 75 b4             	pushl  -0x4c(%ebp)
 106:	e8 97 05 00 00       	call   6a2 <putstr>
 10b:	83 c4 20             	add    $0x20,%esp
	movewait0 = 20;
 10e:	c7 45 d4 14 00 00 00 	movl   $0x14,-0x2c(%ebp)
	fx = 18;
 115:	c7 45 ec 12 00 00 00 	movl   $0x12,-0x14(%ebp)
	putstr(win, winbuf, fx, 13, 6, "efg");
 11c:	83 ec 08             	sub    $0x8,%esp
 11f:	68 25 00 10 00       	push   $0x100025
 124:	6a 06                	push   $0x6
 126:	6a 0d                	push   $0xd
 128:	ff 75 ec             	pushl  -0x14(%ebp)
 12b:	8d 85 20 a9 fe ff    	lea    -0x156e0(%ebp),%eax
 131:	50                   	push   %eax
 132:	ff 75 b4             	pushl  -0x4c(%ebp)
 135:	e8 68 05 00 00       	call   6a2 <putstr>
 13a:	83 c4 20             	add    $0x20,%esp
	wait(100, timer, keyflag);
 13d:	83 ec 04             	sub    $0x4,%esp
 140:	8d 85 50 a8 fe ff    	lea    -0x157b0(%ebp),%eax
 146:	50                   	push   %eax
 147:	ff 75 b0             	pushl  -0x50(%ebp)
 14a:	6a 64                	push   $0x64
 14c:	e8 96 07 00 00       	call   8e7 <wait>
 151:	83 c4 10             	add    $0x10,%esp

next_group:
	wait(100, timer, keyflag);
 154:	83 ec 04             	sub    $0x4,%esp
 157:	8d 85 50 a8 fe ff    	lea    -0x157b0(%ebp),%eax
 15d:	50                   	push   %eax
 15e:	ff 75 b0             	pushl  -0x50(%ebp)
 161:	6a 64                	push   $0x64
 163:	e8 7f 07 00 00       	call   8e7 <wait>
 168:	83 c4 10             	add    $0x10,%esp
	ix = 7;
 16b:	c7 45 dc 07 00 00 00 	movl   $0x7,-0x24(%ebp)
	iy = 1;
 172:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
	invline = 6;
 179:	c7 45 c8 06 00 00 00 	movl   $0x6,-0x38(%ebp)
	for (i = 0; i < 6; i++) {
 180:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 187:	eb 6a                	jmp    1f3 <binmain+0x1a9>
		for (j = 0; j < 27; j++) {
 189:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 190:	eb 23                	jmp    1b5 <binmain+0x16b>
			invstr[i * 32 + j] = invstr0[j];
 192:	8b 45 f4             	mov    -0xc(%ebp),%eax
 195:	c1 e0 05             	shl    $0x5,%eax
 198:	89 c2                	mov    %eax,%edx
 19a:	8b 45 f0             	mov    -0x10(%ebp),%eax
 19d:	01 c2                	add    %eax,%edx
 19f:	8b 45 f0             	mov    -0x10(%ebp),%eax
 1a2:	05 a0 01 10 00       	add    $0x1001a0,%eax
 1a7:	0f b6 00             	movzbl (%eax),%eax
 1aa:	88 84 15 60 a8 fe ff 	mov    %al,-0x157a0(%ebp,%edx,1)
	wait(100, timer, keyflag);
	ix = 7;
	iy = 1;
	invline = 6;
	for (i = 0; i < 6; i++) {
		for (j = 0; j < 27; j++) {
 1b1:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 1b5:	83 7d f0 1a          	cmpl   $0x1a,-0x10(%ebp)
 1b9:	7e d7                	jle    192 <binmain+0x148>
			invstr[i * 32 + j] = invstr0[j];
		}
		putstr(win, winbuf, ix, iy + i, 2, invstr + i * 32);
 1bb:	8b 45 f4             	mov    -0xc(%ebp),%eax
 1be:	c1 e0 05             	shl    $0x5,%eax
 1c1:	89 c2                	mov    %eax,%edx
 1c3:	8d 85 60 a8 fe ff    	lea    -0x157a0(%ebp),%eax
 1c9:	01 c2                	add    %eax,%edx
 1cb:	8b 4d d8             	mov    -0x28(%ebp),%ecx
 1ce:	8b 45 f4             	mov    -0xc(%ebp),%eax
 1d1:	01 c8                	add    %ecx,%eax
 1d3:	83 ec 08             	sub    $0x8,%esp
 1d6:	52                   	push   %edx
 1d7:	6a 02                	push   $0x2
 1d9:	50                   	push   %eax
 1da:	ff 75 dc             	pushl  -0x24(%ebp)
 1dd:	8d 85 20 a9 fe ff    	lea    -0x156e0(%ebp),%eax
 1e3:	50                   	push   %eax
 1e4:	ff 75 b4             	pushl  -0x4c(%ebp)
 1e7:	e8 b6 04 00 00       	call   6a2 <putstr>
 1ec:	83 c4 20             	add    $0x20,%esp
next_group:
	wait(100, timer, keyflag);
	ix = 7;
	iy = 1;
	invline = 6;
	for (i = 0; i < 6; i++) {
 1ef:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 1f3:	83 7d f4 05          	cmpl   $0x5,-0xc(%ebp)
 1f7:	7e 90                	jle    189 <binmain+0x13f>
		for (j = 0; j < 27; j++) {
			invstr[i * 32 + j] = invstr0[j];
		}
		putstr(win, winbuf, ix, iy + i, 2, invstr + i * 32);
	}
	keyflag[0] = 0;
 1f9:	c6 85 50 a8 fe ff 00 	movb   $0x0,-0x157b0(%ebp)
	keyflag[1] = 0;
 200:	c6 85 51 a8 fe ff 00 	movb   $0x0,-0x157af(%ebp)
	keyflag[2] = 0;
 207:	c6 85 52 a8 fe ff 00 	movb   $0x0,-0x157ae(%ebp)

	ly = 0; /* îÒï\é¶ */
 20e:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
	laserwait = 0;
 215:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
	movewait = movewait0;
 21c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 21f:	89 45 d0             	mov    %eax,-0x30(%ebp)
	idir = +1;
 222:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)
	wait(100, timer, keyflag);
 229:	83 ec 04             	sub    $0x4,%esp
 22c:	8d 85 50 a8 fe ff    	lea    -0x157b0(%ebp),%eax
 232:	50                   	push   %eax
 233:	ff 75 b0             	pushl  -0x50(%ebp)
 236:	6a 64                	push   $0x64
 238:	e8 aa 06 00 00       	call   8e7 <wait>
 23d:	83 c4 10             	add    $0x10,%esp

	for (;;) {
		if (laserwait != 0) {
 240:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
 244:	74 0b                	je     251 <binmain+0x207>
			laserwait--;
 246:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)
			keyflag[2 /* space */] = 0;
 24a:	c6 85 52 a8 fe ff 00 	movb   $0x0,-0x157ae(%ebp)
		}

		wait(4, timer, keyflag);
 251:	83 ec 04             	sub    $0x4,%esp
 254:	8d 85 50 a8 fe ff    	lea    -0x157b0(%ebp),%eax
 25a:	50                   	push   %eax
 25b:	ff 75 b0             	pushl  -0x50(%ebp)
 25e:	6a 04                	push   $0x4
 260:	e8 82 06 00 00       	call   8e7 <wait>
 265:	83 c4 10             	add    $0x10,%esp

		/* é©ã@ÇÃèàóù */
		if (keyflag[0 /* left */]  != 0 && fx > 0) {
 268:	0f b6 85 50 a8 fe ff 	movzbl -0x157b0(%ebp),%eax
 26f:	84 c0                	test   %al,%al
 271:	74 32                	je     2a5 <binmain+0x25b>
 273:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
 277:	7e 2c                	jle    2a5 <binmain+0x25b>
			fx--;
 279:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
			putstr(win, winbuf, fx, 13, 6, "efg ");
 27d:	83 ec 08             	sub    $0x8,%esp
 280:	68 29 00 10 00       	push   $0x100029
 285:	6a 06                	push   $0x6
 287:	6a 0d                	push   $0xd
 289:	ff 75 ec             	pushl  -0x14(%ebp)
 28c:	8d 85 20 a9 fe ff    	lea    -0x156e0(%ebp),%eax
 292:	50                   	push   %eax
 293:	ff 75 b4             	pushl  -0x4c(%ebp)
 296:	e8 07 04 00 00       	call   6a2 <putstr>
 29b:	83 c4 20             	add    $0x20,%esp
			keyflag[0 /* left */]  = 0;
 29e:	c6 85 50 a8 fe ff 00 	movb   $0x0,-0x157b0(%ebp)
		}
		if (keyflag[1 /* right */] != 0 && fx < 37) {
 2a5:	0f b6 85 51 a8 fe ff 	movzbl -0x157af(%ebp),%eax
 2ac:	84 c0                	test   %al,%al
 2ae:	74 32                	je     2e2 <binmain+0x298>
 2b0:	83 7d ec 24          	cmpl   $0x24,-0x14(%ebp)
 2b4:	7f 2c                	jg     2e2 <binmain+0x298>
			putstr(win, winbuf, fx, 13, 6, " efg");
 2b6:	83 ec 08             	sub    $0x8,%esp
 2b9:	68 2e 00 10 00       	push   $0x10002e
 2be:	6a 06                	push   $0x6
 2c0:	6a 0d                	push   $0xd
 2c2:	ff 75 ec             	pushl  -0x14(%ebp)
 2c5:	8d 85 20 a9 fe ff    	lea    -0x156e0(%ebp),%eax
 2cb:	50                   	push   %eax
 2cc:	ff 75 b4             	pushl  -0x4c(%ebp)
 2cf:	e8 ce 03 00 00       	call   6a2 <putstr>
 2d4:	83 c4 20             	add    $0x20,%esp
			fx++;
 2d7:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
			keyflag[1 /* right */] = 0;
 2db:	c6 85 51 a8 fe ff 00 	movb   $0x0,-0x157af(%ebp)
		}
		if (keyflag[2 /* space */] != 0 && laserwait == 0) {
 2e2:	0f b6 85 52 a8 fe ff 	movzbl -0x157ae(%ebp),%eax
 2e9:	84 c0                	test   %al,%al
 2eb:	74 1d                	je     30a <binmain+0x2c0>
 2ed:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
 2f1:	75 17                	jne    30a <binmain+0x2c0>
			laserwait = 15;
 2f3:	c7 45 e8 0f 00 00 00 	movl   $0xf,-0x18(%ebp)
			lx = fx + 1;
 2fa:	8b 45 ec             	mov    -0x14(%ebp),%eax
 2fd:	83 c0 01             	add    $0x1,%eax
 300:	89 45 e4             	mov    %eax,-0x1c(%ebp)
			ly = 13;
 303:	c7 45 e0 0d 00 00 00 	movl   $0xd,-0x20(%ebp)
		}

		/* ÉCÉìÉxÅ[É_à⁄ìÆ */
		if (movewait != 0) {
 30a:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)
 30e:	74 09                	je     319 <binmain+0x2cf>
			movewait--;
 310:	83 6d d0 01          	subl   $0x1,-0x30(%ebp)
 314:	e9 ae 00 00 00       	jmp    3c7 <binmain+0x37d>
		} else {
			movewait = movewait0;
 319:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 31c:	89 45 d0             	mov    %eax,-0x30(%ebp)
			if (ix + idir > 14 || ix + idir < 0) {
 31f:	8b 55 dc             	mov    -0x24(%ebp),%edx
 322:	8b 45 cc             	mov    -0x34(%ebp),%eax
 325:	01 d0                	add    %edx,%eax
 327:	83 f8 0e             	cmp    $0xe,%eax
 32a:	7f 0c                	jg     338 <binmain+0x2ee>
 32c:	8b 55 dc             	mov    -0x24(%ebp),%edx
 32f:	8b 45 cc             	mov    -0x34(%ebp),%eax
 332:	01 d0                	add    %edx,%eax
 334:	85 c0                	test   %eax,%eax
 336:	79 40                	jns    378 <binmain+0x32e>
				if (iy + invline == 13) {
 338:	8b 55 d8             	mov    -0x28(%ebp),%edx
 33b:	8b 45 c8             	mov    -0x38(%ebp),%eax
 33e:	01 d0                	add    %edx,%eax
 340:	83 f8 0d             	cmp    $0xd,%eax
 343:	0f 84 e8 02 00 00    	je     631 <binmain+0x5e7>
					break; /* GAME OVER */
				}
				idir = - idir;
 349:	f7 5d cc             	negl   -0x34(%ebp)
				putstr(win, winbuf, ix + 1, iy, 0, "                         ");
 34c:	8b 45 dc             	mov    -0x24(%ebp),%eax
 34f:	83 c0 01             	add    $0x1,%eax
 352:	83 ec 08             	sub    $0x8,%esp
 355:	68 33 00 10 00       	push   $0x100033
 35a:	6a 00                	push   $0x0
 35c:	ff 75 d8             	pushl  -0x28(%ebp)
 35f:	50                   	push   %eax
 360:	8d 85 20 a9 fe ff    	lea    -0x156e0(%ebp),%eax
 366:	50                   	push   %eax
 367:	ff 75 b4             	pushl  -0x4c(%ebp)
 36a:	e8 33 03 00 00       	call   6a2 <putstr>
 36f:	83 c4 20             	add    $0x20,%esp
				iy++;
 372:	83 45 d8 01          	addl   $0x1,-0x28(%ebp)
 376:	eb 06                	jmp    37e <binmain+0x334>
			} else {
				ix += idir;
 378:	8b 45 cc             	mov    -0x34(%ebp),%eax
 37b:	01 45 dc             	add    %eax,-0x24(%ebp)
			}
			for (i = 0; i < invline; i++) {
 37e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 385:	eb 38                	jmp    3bf <binmain+0x375>
				putstr(win, winbuf, ix, iy + i, 2, invstr + i * 32);
 387:	8b 45 f4             	mov    -0xc(%ebp),%eax
 38a:	c1 e0 05             	shl    $0x5,%eax
 38d:	89 c2                	mov    %eax,%edx
 38f:	8d 85 60 a8 fe ff    	lea    -0x157a0(%ebp),%eax
 395:	01 c2                	add    %eax,%edx
 397:	8b 4d d8             	mov    -0x28(%ebp),%ecx
 39a:	8b 45 f4             	mov    -0xc(%ebp),%eax
 39d:	01 c8                	add    %ecx,%eax
 39f:	83 ec 08             	sub    $0x8,%esp
 3a2:	52                   	push   %edx
 3a3:	6a 02                	push   $0x2
 3a5:	50                   	push   %eax
 3a6:	ff 75 dc             	pushl  -0x24(%ebp)
 3a9:	8d 85 20 a9 fe ff    	lea    -0x156e0(%ebp),%eax
 3af:	50                   	push   %eax
 3b0:	ff 75 b4             	pushl  -0x4c(%ebp)
 3b3:	e8 ea 02 00 00       	call   6a2 <putstr>
 3b8:	83 c4 20             	add    $0x20,%esp
				putstr(win, winbuf, ix + 1, iy, 0, "                         ");
				iy++;
			} else {
				ix += idir;
			}
			for (i = 0; i < invline; i++) {
 3bb:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 3bf:	8b 45 f4             	mov    -0xc(%ebp),%eax
 3c2:	3b 45 c8             	cmp    -0x38(%ebp),%eax
 3c5:	7c c0                	jl     387 <binmain+0x33d>
				putstr(win, winbuf, ix, iy + i, 2, invstr + i * 32);
			}
		}

		/* ÉåÅ[ÉUÅ[èàóù */
		if (ly > 0) {
 3c7:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
 3cb:	0f 8e 6f fe ff ff    	jle    240 <binmain+0x1f6>
			if (ly < 13) {
 3d1:	83 7d e0 0c          	cmpl   $0xc,-0x20(%ebp)
 3d5:	7f 7d                	jg     454 <binmain+0x40a>
				if (ix < lx && lx < ix + 25 && iy <= ly && ly < iy + invline) {
 3d7:	8b 45 dc             	mov    -0x24(%ebp),%eax
 3da:	3b 45 e4             	cmp    -0x1c(%ebp),%eax
 3dd:	7d 53                	jge    432 <binmain+0x3e8>
 3df:	8b 45 dc             	mov    -0x24(%ebp),%eax
 3e2:	83 c0 19             	add    $0x19,%eax
 3e5:	3b 45 e4             	cmp    -0x1c(%ebp),%eax
 3e8:	7e 48                	jle    432 <binmain+0x3e8>
 3ea:	8b 45 d8             	mov    -0x28(%ebp),%eax
 3ed:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 3f0:	7f 40                	jg     432 <binmain+0x3e8>
 3f2:	8b 55 d8             	mov    -0x28(%ebp),%edx
 3f5:	8b 45 c8             	mov    -0x38(%ebp),%eax
 3f8:	01 d0                	add    %edx,%eax
 3fa:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 3fd:	7e 33                	jle    432 <binmain+0x3e8>
					putstr(win, winbuf, ix, ly, 2, invstr + (ly - iy) * 32);
 3ff:	8b 45 e0             	mov    -0x20(%ebp),%eax
 402:	2b 45 d8             	sub    -0x28(%ebp),%eax
 405:	c1 e0 05             	shl    $0x5,%eax
 408:	89 c2                	mov    %eax,%edx
 40a:	8d 85 60 a8 fe ff    	lea    -0x157a0(%ebp),%eax
 410:	01 d0                	add    %edx,%eax
 412:	83 ec 08             	sub    $0x8,%esp
 415:	50                   	push   %eax
 416:	6a 02                	push   $0x2
 418:	ff 75 e0             	pushl  -0x20(%ebp)
 41b:	ff 75 dc             	pushl  -0x24(%ebp)
 41e:	8d 85 20 a9 fe ff    	lea    -0x156e0(%ebp),%eax
 424:	50                   	push   %eax
 425:	ff 75 b4             	pushl  -0x4c(%ebp)
 428:	e8 75 02 00 00       	call   6a2 <putstr>
 42d:	83 c4 20             	add    $0x20,%esp
 430:	eb 22                	jmp    454 <binmain+0x40a>
				} else {
					putstr(win, winbuf, lx, ly, 0, " ");
 432:	83 ec 08             	sub    $0x8,%esp
 435:	68 4d 00 10 00       	push   $0x10004d
 43a:	6a 00                	push   $0x0
 43c:	ff 75 e0             	pushl  -0x20(%ebp)
 43f:	ff 75 e4             	pushl  -0x1c(%ebp)
 442:	8d 85 20 a9 fe ff    	lea    -0x156e0(%ebp),%eax
 448:	50                   	push   %eax
 449:	ff 75 b4             	pushl  -0x4c(%ebp)
 44c:	e8 51 02 00 00       	call   6a2 <putstr>
 451:	83 c4 20             	add    $0x20,%esp
				}
			}
			ly--;
 454:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
			if (ly > 0) {
 458:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
 45c:	7e 24                	jle    482 <binmain+0x438>
				putstr(win, winbuf, lx, ly, 3, "h");
 45e:	83 ec 08             	sub    $0x8,%esp
 461:	68 4f 00 10 00       	push   $0x10004f
 466:	6a 03                	push   $0x3
 468:	ff 75 e0             	pushl  -0x20(%ebp)
 46b:	ff 75 e4             	pushl  -0x1c(%ebp)
 46e:	8d 85 20 a9 fe ff    	lea    -0x156e0(%ebp),%eax
 474:	50                   	push   %eax
 475:	ff 75 b4             	pushl  -0x4c(%ebp)
 478:	e8 25 02 00 00       	call   6a2 <putstr>
 47d:	83 c4 20             	add    $0x20,%esp
 480:	eb 11                	jmp    493 <binmain+0x449>
			} else {
				point -= 10;
 482:	83 6d bc 0a          	subl   $0xa,-0x44(%ebp)
				if (point <= 0) {
 486:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)
 48a:	7f 07                	jg     493 <binmain+0x449>
					point = 1;
 48c:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%ebp)
				}
			}
			if (ix < lx && lx < ix + 25 && iy <= ly && ly < iy + invline) {
 493:	8b 45 dc             	mov    -0x24(%ebp),%eax
 496:	3b 45 e4             	cmp    -0x1c(%ebp),%eax
 499:	0f 8d a1 fd ff ff    	jge    240 <binmain+0x1f6>
 49f:	8b 45 dc             	mov    -0x24(%ebp),%eax
 4a2:	83 c0 19             	add    $0x19,%eax
 4a5:	3b 45 e4             	cmp    -0x1c(%ebp),%eax
 4a8:	0f 8e 92 fd ff ff    	jle    240 <binmain+0x1f6>
 4ae:	8b 45 d8             	mov    -0x28(%ebp),%eax
 4b1:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 4b4:	0f 8f 86 fd ff ff    	jg     240 <binmain+0x1f6>
 4ba:	8b 55 d8             	mov    -0x28(%ebp),%edx
 4bd:	8b 45 c8             	mov    -0x38(%ebp),%eax
 4c0:	01 d0                	add    %edx,%eax
 4c2:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 4c5:	0f 8e 75 fd ff ff    	jle    240 <binmain+0x1f6>
				p = invstr + (ly - iy) * 32 + (lx - ix);
 4cb:	8b 45 e0             	mov    -0x20(%ebp),%eax
 4ce:	2b 45 d8             	sub    -0x28(%ebp),%eax
 4d1:	c1 e0 05             	shl    $0x5,%eax
 4d4:	89 c2                	mov    %eax,%edx
 4d6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 4d9:	2b 45 dc             	sub    -0x24(%ebp),%eax
 4dc:	01 c2                	add    %eax,%edx
 4de:	8d 85 60 a8 fe ff    	lea    -0x157a0(%ebp),%eax
 4e4:	01 d0                	add    %edx,%eax
 4e6:	89 45 b8             	mov    %eax,-0x48(%ebp)
				if (*p != ' ') {
 4e9:	8b 45 b8             	mov    -0x48(%ebp),%eax
 4ec:	0f b6 00             	movzbl (%eax),%eax
 4ef:	3c 20                	cmp    $0x20,%al
 4f1:	0f 84 49 fd ff ff    	je     240 <binmain+0x1f6>
					/* hit ! */
					score += point;
 4f7:	8b 45 bc             	mov    -0x44(%ebp),%eax
 4fa:	01 45 c4             	add    %eax,-0x3c(%ebp)
					point++;
 4fd:	83 45 bc 01          	addl   $0x1,-0x44(%ebp)
					setdec8(s, score);
 501:	83 ec 08             	sub    $0x8,%esp
 504:	ff 75 c4             	pushl  -0x3c(%ebp)
 507:	8d 85 54 a8 fe ff    	lea    -0x157ac(%ebp),%eax
 50d:	50                   	push   %eax
 50e:	e8 49 04 00 00       	call   95c <setdec8>
 513:	83 c4 10             	add    $0x10,%esp
					putstr(win, winbuf, 10, 0, 7, s);
 516:	83 ec 08             	sub    $0x8,%esp
 519:	8d 85 54 a8 fe ff    	lea    -0x157ac(%ebp),%eax
 51f:	50                   	push   %eax
 520:	6a 07                	push   $0x7
 522:	6a 00                	push   $0x0
 524:	6a 0a                	push   $0xa
 526:	8d 85 20 a9 fe ff    	lea    -0x156e0(%ebp),%eax
 52c:	50                   	push   %eax
 52d:	ff 75 b4             	pushl  -0x4c(%ebp)
 530:	e8 6d 01 00 00       	call   6a2 <putstr>
 535:	83 c4 20             	add    $0x20,%esp
					if (high < score) {
 538:	8b 45 c0             	mov    -0x40(%ebp),%eax
 53b:	3b 45 c4             	cmp    -0x3c(%ebp),%eax
 53e:	7d 28                	jge    568 <binmain+0x51e>
						high = score;
 540:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 543:	89 45 c0             	mov    %eax,-0x40(%ebp)
						putstr(win, winbuf, 27, 0, 7, s);
 546:	83 ec 08             	sub    $0x8,%esp
 549:	8d 85 54 a8 fe ff    	lea    -0x157ac(%ebp),%eax
 54f:	50                   	push   %eax
 550:	6a 07                	push   $0x7
 552:	6a 00                	push   $0x0
 554:	6a 1b                	push   $0x1b
 556:	8d 85 20 a9 fe ff    	lea    -0x156e0(%ebp),%eax
 55c:	50                   	push   %eax
 55d:	ff 75 b4             	pushl  -0x4c(%ebp)
 560:	e8 3d 01 00 00       	call   6a2 <putstr>
 565:	83 c4 20             	add    $0x20,%esp
					}
					for (p--; *p != ' '; p--) { }
 568:	83 6d b8 01          	subl   $0x1,-0x48(%ebp)
 56c:	eb 04                	jmp    572 <binmain+0x528>
 56e:	83 6d b8 01          	subl   $0x1,-0x48(%ebp)
 572:	8b 45 b8             	mov    -0x48(%ebp),%eax
 575:	0f b6 00             	movzbl (%eax),%eax
 578:	3c 20                	cmp    $0x20,%al
 57a:	75 f2                	jne    56e <binmain+0x524>
					for (i = 1; i < 5; i++) {
 57c:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 583:	eb 0f                	jmp    594 <binmain+0x54a>
						p[i] = ' ';
 585:	8b 55 f4             	mov    -0xc(%ebp),%edx
 588:	8b 45 b8             	mov    -0x48(%ebp),%eax
 58b:	01 d0                	add    %edx,%eax
 58d:	c6 00 20             	movb   $0x20,(%eax)
					if (high < score) {
						high = score;
						putstr(win, winbuf, 27, 0, 7, s);
					}
					for (p--; *p != ' '; p--) { }
					for (i = 1; i < 5; i++) {
 590:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 594:	83 7d f4 04          	cmpl   $0x4,-0xc(%ebp)
 598:	7e eb                	jle    585 <binmain+0x53b>
						p[i] = ' ';
					}
					putstr(win, winbuf, ix, ly, 2, invstr + (ly - iy) * 32);
 59a:	8b 45 e0             	mov    -0x20(%ebp),%eax
 59d:	2b 45 d8             	sub    -0x28(%ebp),%eax
 5a0:	c1 e0 05             	shl    $0x5,%eax
 5a3:	89 c2                	mov    %eax,%edx
 5a5:	8d 85 60 a8 fe ff    	lea    -0x157a0(%ebp),%eax
 5ab:	01 d0                	add    %edx,%eax
 5ad:	83 ec 08             	sub    $0x8,%esp
 5b0:	50                   	push   %eax
 5b1:	6a 02                	push   $0x2
 5b3:	ff 75 e0             	pushl  -0x20(%ebp)
 5b6:	ff 75 dc             	pushl  -0x24(%ebp)
 5b9:	8d 85 20 a9 fe ff    	lea    -0x156e0(%ebp),%eax
 5bf:	50                   	push   %eax
 5c0:	ff 75 b4             	pushl  -0x4c(%ebp)
 5c3:	e8 da 00 00 00       	call   6a2 <putstr>
 5c8:	83 c4 20             	add    $0x20,%esp
					for (; invline > 0; invline--) {
 5cb:	eb 34                	jmp    601 <binmain+0x5b7>
						for (p = invstr + (invline - 1) * 32; *p != 0; p++) {
 5cd:	8b 45 c8             	mov    -0x38(%ebp),%eax
 5d0:	83 e8 01             	sub    $0x1,%eax
 5d3:	c1 e0 05             	shl    $0x5,%eax
 5d6:	89 c2                	mov    %eax,%edx
 5d8:	8d 85 60 a8 fe ff    	lea    -0x157a0(%ebp),%eax
 5de:	01 d0                	add    %edx,%eax
 5e0:	89 45 b8             	mov    %eax,-0x48(%ebp)
 5e3:	eb 0e                	jmp    5f3 <binmain+0x5a9>
							if (*p != ' ') {
 5e5:	8b 45 b8             	mov    -0x48(%ebp),%eax
 5e8:	0f b6 00             	movzbl (%eax),%eax
 5eb:	3c 20                	cmp    $0x20,%al
 5ed:	75 35                	jne    624 <binmain+0x5da>
					for (i = 1; i < 5; i++) {
						p[i] = ' ';
					}
					putstr(win, winbuf, ix, ly, 2, invstr + (ly - iy) * 32);
					for (; invline > 0; invline--) {
						for (p = invstr + (invline - 1) * 32; *p != 0; p++) {
 5ef:	83 45 b8 01          	addl   $0x1,-0x48(%ebp)
 5f3:	8b 45 b8             	mov    -0x48(%ebp),%eax
 5f6:	0f b6 00             	movzbl (%eax),%eax
 5f9:	84 c0                	test   %al,%al
 5fb:	75 e8                	jne    5e5 <binmain+0x59b>
					for (p--; *p != ' '; p--) { }
					for (i = 1; i < 5; i++) {
						p[i] = ' ';
					}
					putstr(win, winbuf, ix, ly, 2, invstr + (ly - iy) * 32);
					for (; invline > 0; invline--) {
 5fd:	83 6d c8 01          	subl   $0x1,-0x38(%ebp)
 601:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)
 605:	7f c6                	jg     5cd <binmain+0x583>
								goto alive;
							}
						}
					}
					/* ëSïîÇ‚Ç¡Ç¬ÇØÇÁÇÍÇΩ */
					movewait0 -= movewait0 / 3;
 607:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
 60a:	ba 56 55 55 55       	mov    $0x55555556,%edx
 60f:	89 c8                	mov    %ecx,%eax
 611:	f7 ea                	imul   %edx
 613:	89 c8                	mov    %ecx,%eax
 615:	c1 f8 1f             	sar    $0x1f,%eax
 618:	29 c2                	sub    %eax,%edx
 61a:	89 d0                	mov    %edx,%eax
 61c:	29 45 d4             	sub    %eax,-0x2c(%ebp)
					goto next_group;
 61f:	e9 30 fb ff ff       	jmp    154 <binmain+0x10a>
					}
					putstr(win, winbuf, ix, ly, 2, invstr + (ly - iy) * 32);
					for (; invline > 0; invline--) {
						for (p = invstr + (invline - 1) * 32; *p != 0; p++) {
							if (*p != ' ') {
								goto alive;
 624:	90                   	nop
					}
					/* ëSïîÇ‚Ç¡Ç¬ÇØÇÁÇÍÇΩ */
					movewait0 -= movewait0 / 3;
					goto next_group;
	alive:
					ly = 0;
 625:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
				}
			}
		}
	}
 62c:	e9 0f fc ff ff       	jmp    240 <binmain+0x1f6>
			movewait--;
		} else {
			movewait = movewait0;
			if (ix + idir > 14 || ix + idir < 0) {
				if (iy + invline == 13) {
					break; /* GAME OVER */
 631:	90                   	nop
			}
		}
	}

	/* GAME OVER */
	putstr(win, winbuf, 15, 6, 1, "GAME OVER");
 632:	83 ec 08             	sub    $0x8,%esp
 635:	68 51 00 10 00       	push   $0x100051
 63a:	6a 01                	push   $0x1
 63c:	6a 06                	push   $0x6
 63e:	6a 0f                	push   $0xf
 640:	8d 85 20 a9 fe ff    	lea    -0x156e0(%ebp),%eax
 646:	50                   	push   %eax
 647:	ff 75 b4             	pushl  -0x4c(%ebp)
 64a:	e8 53 00 00 00       	call   6a2 <putstr>
 64f:	83 c4 20             	add    $0x20,%esp
	wait(0, timer, keyflag);
 652:	83 ec 04             	sub    $0x4,%esp
 655:	8d 85 50 a8 fe ff    	lea    -0x157b0(%ebp),%eax
 65b:	50                   	push   %eax
 65c:	ff 75 b0             	pushl  -0x50(%ebp)
 65f:	6a 00                	push   $0x0
 661:	e8 81 02 00 00       	call   8e7 <wait>
 666:	83 c4 10             	add    $0x10,%esp
	for (i = 1; i < 14; i++) {
 669:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 670:	eb 25                	jmp    697 <binmain+0x64d>
		putstr(win, winbuf, 0, i, 0, "                                        ");
 672:	83 ec 08             	sub    $0x8,%esp
 675:	68 5c 00 10 00       	push   $0x10005c
 67a:	6a 00                	push   $0x0
 67c:	ff 75 f4             	pushl  -0xc(%ebp)
 67f:	6a 00                	push   $0x0
 681:	8d 85 20 a9 fe ff    	lea    -0x156e0(%ebp),%eax
 687:	50                   	push   %eax
 688:	ff 75 b4             	pushl  -0x4c(%ebp)
 68b:	e8 12 00 00 00       	call   6a2 <putstr>
 690:	83 c4 20             	add    $0x20,%esp
	}

	/* GAME OVER */
	putstr(win, winbuf, 15, 6, 1, "GAME OVER");
	wait(0, timer, keyflag);
	for (i = 1; i < 14; i++) {
 693:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 697:	83 7d f4 0d          	cmpl   $0xd,-0xc(%ebp)
 69b:	7e d5                	jle    672 <binmain+0x628>
		putstr(win, winbuf, 0, i, 0, "                                        ");
	}
	goto restart;
 69d:	e9 3e fa ff ff       	jmp    e0 <binmain+0x96>

000006a2 <putstr>:
}

void putstr(int win, char *winbuf, int x, int y, int col, unsigned char *s)
{
 6a2:	55                   	push   %ebp
 6a3:	89 e5                	mov    %esp,%ebp
 6a5:	83 ec 28             	sub    $0x28,%esp
	int c, x0, i;
	char *p, *q, t[2];
	x = x * 8 + 8;
 6a8:	8b 45 10             	mov    0x10(%ebp),%eax
 6ab:	83 c0 01             	add    $0x1,%eax
 6ae:	c1 e0 03             	shl    $0x3,%eax
 6b1:	89 45 10             	mov    %eax,0x10(%ebp)
	y = y * 16 + 29;
 6b4:	8b 45 14             	mov    0x14(%ebp),%eax
 6b7:	c1 e0 04             	shl    $0x4,%eax
 6ba:	83 c0 1d             	add    $0x1d,%eax
 6bd:	89 45 14             	mov    %eax,0x14(%ebp)
	x0 = x;
 6c0:	8b 45 10             	mov    0x10(%ebp),%eax
 6c3:	89 45 ec             	mov    %eax,-0x14(%ebp)
	i = strlen(s);	/* sÇÃï∂éöêîÇêîÇ¶ÇÈ */
 6c6:	83 ec 0c             	sub    $0xc,%esp
 6c9:	ff 75 1c             	pushl  0x1c(%ebp)
 6cc:	e8 03 03 00 00       	call   9d4 <strlen>
 6d1:	83 c4 10             	add    $0x10,%esp
 6d4:	89 45 f4             	mov    %eax,-0xc(%ebp)
	api_boxfilwin(win, x, y, x + i * 8 - 1, y + 15, 0);
 6d7:	8b 45 14             	mov    0x14(%ebp),%eax
 6da:	8d 50 0f             	lea    0xf(%eax),%edx
 6dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
 6e0:	8d 0c c5 00 00 00 00 	lea    0x0(,%eax,8),%ecx
 6e7:	8b 45 10             	mov    0x10(%ebp),%eax
 6ea:	01 c8                	add    %ecx,%eax
 6ec:	83 e8 01             	sub    $0x1,%eax
 6ef:	83 ec 08             	sub    $0x8,%esp
 6f2:	6a 00                	push   $0x0
 6f4:	52                   	push   %edx
 6f5:	50                   	push   %eax
 6f6:	ff 75 14             	pushl  0x14(%ebp)
 6f9:	ff 75 10             	pushl  0x10(%ebp)
 6fc:	ff 75 08             	pushl  0x8(%ebp)
 6ff:	e8 5b 03 00 00       	call   a5f <api_boxfilwin>
 704:	83 c4 20             	add    $0x20,%esp
	q = winbuf + y * 336;
 707:	8b 45 14             	mov    0x14(%ebp),%eax
 70a:	69 c0 50 01 00 00    	imul   $0x150,%eax,%eax
 710:	89 c2                	mov    %eax,%edx
 712:	8b 45 0c             	mov    0xc(%ebp),%eax
 715:	01 d0                	add    %edx,%eax
 717:	89 45 f0             	mov    %eax,-0x10(%ebp)
	t[1] = 0;
 71a:	c6 45 e3 00          	movb   $0x0,-0x1d(%ebp)
	for (;;) {
		c = *s;
 71e:	8b 45 1c             	mov    0x1c(%ebp),%eax
 721:	0f b6 00             	movzbl (%eax),%eax
 724:	0f b6 c0             	movzbl %al,%eax
 727:	89 45 e8             	mov    %eax,-0x18(%ebp)
		if (c == 0) {
 72a:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
 72e:	0f 84 91 01 00 00    	je     8c5 <putstr+0x223>
			break;
		}
		if (c != ' ') {
 734:	83 7d e8 20          	cmpl   $0x20,-0x18(%ebp)
 738:	0f 84 7a 01 00 00    	je     8b8 <putstr+0x216>
			if ('a' <= c && c <= 'h') {
 73e:	83 7d e8 60          	cmpl   $0x60,-0x18(%ebp)
 742:	0f 8e 4a 01 00 00    	jle    892 <putstr+0x1f0>
 748:	83 7d e8 68          	cmpl   $0x68,-0x18(%ebp)
 74c:	0f 8f 40 01 00 00    	jg     892 <putstr+0x1f0>
				p = charset + 16 * (c - 'a');
 752:	8b 45 e8             	mov    -0x18(%ebp),%eax
 755:	83 e8 61             	sub    $0x61,%eax
 758:	c1 e0 04             	shl    $0x4,%eax
 75b:	05 20 01 10 00       	add    $0x100120,%eax
 760:	89 45 e4             	mov    %eax,-0x1c(%ebp)
				q += x;
 763:	8b 45 10             	mov    0x10(%ebp),%eax
 766:	01 45 f0             	add    %eax,-0x10(%ebp)
				for (i = 0; i < 16; i++) {
 769:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 770:	e9 04 01 00 00       	jmp    879 <putstr+0x1d7>
					if ((p[i] & 0x80) != 0) { q[0] = col; }
 775:	8b 55 f4             	mov    -0xc(%ebp),%edx
 778:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 77b:	01 d0                	add    %edx,%eax
 77d:	0f b6 00             	movzbl (%eax),%eax
 780:	84 c0                	test   %al,%al
 782:	79 0a                	jns    78e <putstr+0xec>
 784:	8b 45 18             	mov    0x18(%ebp),%eax
 787:	89 c2                	mov    %eax,%edx
 789:	8b 45 f0             	mov    -0x10(%ebp),%eax
 78c:	88 10                	mov    %dl,(%eax)
					if ((p[i] & 0x40) != 0) { q[1] = col; }
 78e:	8b 55 f4             	mov    -0xc(%ebp),%edx
 791:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 794:	01 d0                	add    %edx,%eax
 796:	0f b6 00             	movzbl (%eax),%eax
 799:	0f be c0             	movsbl %al,%eax
 79c:	83 e0 40             	and    $0x40,%eax
 79f:	85 c0                	test   %eax,%eax
 7a1:	74 0b                	je     7ae <putstr+0x10c>
 7a3:	8b 45 f0             	mov    -0x10(%ebp),%eax
 7a6:	83 c0 01             	add    $0x1,%eax
 7a9:	8b 55 18             	mov    0x18(%ebp),%edx
 7ac:	88 10                	mov    %dl,(%eax)
					if ((p[i] & 0x20) != 0) { q[2] = col; }
 7ae:	8b 55 f4             	mov    -0xc(%ebp),%edx
 7b1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 7b4:	01 d0                	add    %edx,%eax
 7b6:	0f b6 00             	movzbl (%eax),%eax
 7b9:	0f be c0             	movsbl %al,%eax
 7bc:	83 e0 20             	and    $0x20,%eax
 7bf:	85 c0                	test   %eax,%eax
 7c1:	74 0b                	je     7ce <putstr+0x12c>
 7c3:	8b 45 f0             	mov    -0x10(%ebp),%eax
 7c6:	83 c0 02             	add    $0x2,%eax
 7c9:	8b 55 18             	mov    0x18(%ebp),%edx
 7cc:	88 10                	mov    %dl,(%eax)
					if ((p[i] & 0x10) != 0) { q[3] = col; }
 7ce:	8b 55 f4             	mov    -0xc(%ebp),%edx
 7d1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 7d4:	01 d0                	add    %edx,%eax
 7d6:	0f b6 00             	movzbl (%eax),%eax
 7d9:	0f be c0             	movsbl %al,%eax
 7dc:	83 e0 10             	and    $0x10,%eax
 7df:	85 c0                	test   %eax,%eax
 7e1:	74 0b                	je     7ee <putstr+0x14c>
 7e3:	8b 45 f0             	mov    -0x10(%ebp),%eax
 7e6:	83 c0 03             	add    $0x3,%eax
 7e9:	8b 55 18             	mov    0x18(%ebp),%edx
 7ec:	88 10                	mov    %dl,(%eax)
					if ((p[i] & 0x08) != 0) { q[4] = col; }
 7ee:	8b 55 f4             	mov    -0xc(%ebp),%edx
 7f1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 7f4:	01 d0                	add    %edx,%eax
 7f6:	0f b6 00             	movzbl (%eax),%eax
 7f9:	0f be c0             	movsbl %al,%eax
 7fc:	83 e0 08             	and    $0x8,%eax
 7ff:	85 c0                	test   %eax,%eax
 801:	74 0b                	je     80e <putstr+0x16c>
 803:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806:	83 c0 04             	add    $0x4,%eax
 809:	8b 55 18             	mov    0x18(%ebp),%edx
 80c:	88 10                	mov    %dl,(%eax)
					if ((p[i] & 0x04) != 0) { q[5] = col; }
 80e:	8b 55 f4             	mov    -0xc(%ebp),%edx
 811:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 814:	01 d0                	add    %edx,%eax
 816:	0f b6 00             	movzbl (%eax),%eax
 819:	0f be c0             	movsbl %al,%eax
 81c:	83 e0 04             	and    $0x4,%eax
 81f:	85 c0                	test   %eax,%eax
 821:	74 0b                	je     82e <putstr+0x18c>
 823:	8b 45 f0             	mov    -0x10(%ebp),%eax
 826:	83 c0 05             	add    $0x5,%eax
 829:	8b 55 18             	mov    0x18(%ebp),%edx
 82c:	88 10                	mov    %dl,(%eax)
					if ((p[i] & 0x02) != 0) { q[6] = col; }
 82e:	8b 55 f4             	mov    -0xc(%ebp),%edx
 831:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 834:	01 d0                	add    %edx,%eax
 836:	0f b6 00             	movzbl (%eax),%eax
 839:	0f be c0             	movsbl %al,%eax
 83c:	83 e0 02             	and    $0x2,%eax
 83f:	85 c0                	test   %eax,%eax
 841:	74 0b                	je     84e <putstr+0x1ac>
 843:	8b 45 f0             	mov    -0x10(%ebp),%eax
 846:	83 c0 06             	add    $0x6,%eax
 849:	8b 55 18             	mov    0x18(%ebp),%edx
 84c:	88 10                	mov    %dl,(%eax)
					if ((p[i] & 0x01) != 0) { q[7] = col; }
 84e:	8b 55 f4             	mov    -0xc(%ebp),%edx
 851:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 854:	01 d0                	add    %edx,%eax
 856:	0f b6 00             	movzbl (%eax),%eax
 859:	0f be c0             	movsbl %al,%eax
 85c:	83 e0 01             	and    $0x1,%eax
 85f:	85 c0                	test   %eax,%eax
 861:	74 0b                	je     86e <putstr+0x1cc>
 863:	8b 45 f0             	mov    -0x10(%ebp),%eax
 866:	83 c0 07             	add    $0x7,%eax
 869:	8b 55 18             	mov    0x18(%ebp),%edx
 86c:	88 10                	mov    %dl,(%eax)
					q += 336;
 86e:	81 45 f0 50 01 00 00 	addl   $0x150,-0x10(%ebp)
		}
		if (c != ' ') {
			if ('a' <= c && c <= 'h') {
				p = charset + 16 * (c - 'a');
				q += x;
				for (i = 0; i < 16; i++) {
 875:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 879:	83 7d f4 0f          	cmpl   $0xf,-0xc(%ebp)
 87d:	0f 8e f2 fe ff ff    	jle    775 <putstr+0xd3>
					if ((p[i] & 0x04) != 0) { q[5] = col; }
					if ((p[i] & 0x02) != 0) { q[6] = col; }
					if ((p[i] & 0x01) != 0) { q[7] = col; }
					q += 336;
				}
				q -= 336 * 16 + x;
 883:	8b 45 10             	mov    0x10(%ebp),%eax
 886:	05 00 15 00 00       	add    $0x1500,%eax
 88b:	f7 d8                	neg    %eax
 88d:	01 45 f0             	add    %eax,-0x10(%ebp)
 890:	eb 26                	jmp    8b8 <putstr+0x216>
			} else {
				t[0] = *s;
 892:	8b 45 1c             	mov    0x1c(%ebp),%eax
 895:	0f b6 00             	movzbl (%eax),%eax
 898:	88 45 e2             	mov    %al,-0x1e(%ebp)
				api_putstrwin(win, x, y, col, 1, t);
 89b:	83 ec 08             	sub    $0x8,%esp
 89e:	8d 45 e2             	lea    -0x1e(%ebp),%eax
 8a1:	50                   	push   %eax
 8a2:	6a 01                	push   $0x1
 8a4:	ff 75 18             	pushl  0x18(%ebp)
 8a7:	ff 75 14             	pushl  0x14(%ebp)
 8aa:	ff 75 10             	pushl  0x10(%ebp)
 8ad:	ff 75 08             	pushl  0x8(%ebp)
 8b0:	e8 82 01 00 00       	call   a37 <api_putstrwin>
 8b5:	83 c4 20             	add    $0x20,%esp
			}
		}
		s++;
 8b8:	83 45 1c 01          	addl   $0x1,0x1c(%ebp)
		x += 8;
 8bc:	83 45 10 08          	addl   $0x8,0x10(%ebp)
	}
 8c0:	e9 59 fe ff ff       	jmp    71e <putstr+0x7c>
	q = winbuf + y * 336;
	t[1] = 0;
	for (;;) {
		c = *s;
		if (c == 0) {
			break;
 8c5:	90                   	nop
			}
		}
		s++;
		x += 8;
	}
	api_refreshwin(win, x0, y, x, y + 16);
 8c6:	8b 45 14             	mov    0x14(%ebp),%eax
 8c9:	83 c0 10             	add    $0x10,%eax
 8cc:	83 ec 0c             	sub    $0xc,%esp
 8cf:	50                   	push   %eax
 8d0:	ff 75 10             	pushl  0x10(%ebp)
 8d3:	ff 75 14             	pushl  0x14(%ebp)
 8d6:	ff 75 ec             	pushl  -0x14(%ebp)
 8d9:	ff 75 08             	pushl  0x8(%ebp)
 8dc:	e8 13 02 00 00       	call   af4 <api_refreshwin>
 8e1:	83 c4 20             	add    $0x20,%esp
	return;
 8e4:	90                   	nop
}
 8e5:	c9                   	leave  
 8e6:	c3                   	ret    

000008e7 <wait>:

void wait(int i, int timer, char *keyflag)
{
 8e7:	55                   	push   %ebp
 8e8:	89 e5                	mov    %esp,%ebp
 8ea:	83 ec 18             	sub    $0x18,%esp
	int j;
	if (i > 0) {
 8ed:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 8f1:	7e 1a                	jle    90d <wait+0x26>
		/* àÍíËéûä‘ë“Ç¬ */
		api_settimer(timer, i);
 8f3:	83 ec 08             	sub    $0x8,%esp
 8f6:	ff 75 08             	pushl  0x8(%ebp)
 8f9:	ff 75 0c             	pushl  0xc(%ebp)
 8fc:	e8 71 02 00 00       	call   b72 <api_settimer>
 901:	83 c4 10             	add    $0x10,%esp
		i = 128;
 904:	c7 45 08 80 00 00 00 	movl   $0x80,0x8(%ebp)
 90b:	eb 07                	jmp    914 <wait+0x2d>
	} else {
		i = 0x0a; /* Enter */
 90d:	c7 45 08 0a 00 00 00 	movl   $0xa,0x8(%ebp)
	}
	for (;;) {
		j = api_getkey(1);
 914:	83 ec 0c             	sub    $0xc,%esp
 917:	6a 01                	push   $0x1
 919:	e8 2e 02 00 00       	call   b4c <api_getkey>
 91e:	83 c4 10             	add    $0x10,%esp
 921:	89 45 f4             	mov    %eax,-0xc(%ebp)
		if (i == j) {
 924:	8b 45 08             	mov    0x8(%ebp),%eax
 927:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 92a:	74 2c                	je     958 <wait+0x71>
			break;
		}
		if (j == '4') {
 92c:	83 7d f4 34          	cmpl   $0x34,-0xc(%ebp)
 930:	75 06                	jne    938 <wait+0x51>
			keyflag[0 /* left */]  = 1;
 932:	8b 45 10             	mov    0x10(%ebp),%eax
 935:	c6 00 01             	movb   $0x1,(%eax)
		}
		if (j == '6') {
 938:	83 7d f4 36          	cmpl   $0x36,-0xc(%ebp)
 93c:	75 09                	jne    947 <wait+0x60>
			keyflag[1 /* right */] = 1;
 93e:	8b 45 10             	mov    0x10(%ebp),%eax
 941:	83 c0 01             	add    $0x1,%eax
 944:	c6 00 01             	movb   $0x1,(%eax)
		}
		if (j == ' ') {
 947:	83 7d f4 20          	cmpl   $0x20,-0xc(%ebp)
 94b:	75 c7                	jne    914 <wait+0x2d>
			keyflag[2 /* space */] = 1;
 94d:	8b 45 10             	mov    0x10(%ebp),%eax
 950:	83 c0 02             	add    $0x2,%eax
 953:	c6 00 01             	movb   $0x1,(%eax)
		}
	}
 956:	eb bc                	jmp    914 <wait+0x2d>
		i = 0x0a; /* Enter */
	}
	for (;;) {
		j = api_getkey(1);
		if (i == j) {
			break;
 958:	90                   	nop
		}
		if (j == ' ') {
			keyflag[2 /* space */] = 1;
		}
	}
	return;
 959:	90                   	nop
}
 95a:	c9                   	leave  
 95b:	c3                   	ret    

0000095c <setdec8>:

void setdec8(char *s, int i)
/* iÇ10êiêîï\ãLÇ≈sÇ…äiî[ */
{
 95c:	55                   	push   %ebp
 95d:	89 e5                	mov    %esp,%ebp
 95f:	53                   	push   %ebx
 960:	83 ec 10             	sub    $0x10,%esp
	int j;
	for (j = 7; j >= 0; j--) {
 963:	c7 45 f8 07 00 00 00 	movl   $0x7,-0x8(%ebp)
 96a:	eb 52                	jmp    9be <setdec8+0x62>
		s[j] = '0' + i % 10;
 96c:	8b 55 f8             	mov    -0x8(%ebp),%edx
 96f:	8b 45 08             	mov    0x8(%ebp),%eax
 972:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 975:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 978:	ba 67 66 66 66       	mov    $0x66666667,%edx
 97d:	89 c8                	mov    %ecx,%eax
 97f:	f7 ea                	imul   %edx
 981:	c1 fa 02             	sar    $0x2,%edx
 984:	89 c8                	mov    %ecx,%eax
 986:	c1 f8 1f             	sar    $0x1f,%eax
 989:	29 c2                	sub    %eax,%edx
 98b:	89 d0                	mov    %edx,%eax
 98d:	c1 e0 02             	shl    $0x2,%eax
 990:	01 d0                	add    %edx,%eax
 992:	01 c0                	add    %eax,%eax
 994:	29 c1                	sub    %eax,%ecx
 996:	89 ca                	mov    %ecx,%edx
 998:	89 d0                	mov    %edx,%eax
 99a:	83 c0 30             	add    $0x30,%eax
 99d:	88 03                	mov    %al,(%ebx)
		i /= 10;
 99f:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 9a2:	ba 67 66 66 66       	mov    $0x66666667,%edx
 9a7:	89 c8                	mov    %ecx,%eax
 9a9:	f7 ea                	imul   %edx
 9ab:	c1 fa 02             	sar    $0x2,%edx
 9ae:	89 c8                	mov    %ecx,%eax
 9b0:	c1 f8 1f             	sar    $0x1f,%eax
 9b3:	29 c2                	sub    %eax,%edx
 9b5:	89 d0                	mov    %edx,%eax
 9b7:	89 45 0c             	mov    %eax,0xc(%ebp)

void setdec8(char *s, int i)
/* iÇ10êiêîï\ãLÇ≈sÇ…äiî[ */
{
	int j;
	for (j = 7; j >= 0; j--) {
 9ba:	83 6d f8 01          	subl   $0x1,-0x8(%ebp)
 9be:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)
 9c2:	79 a8                	jns    96c <setdec8+0x10>
		s[j] = '0' + i % 10;
		i /= 10;
	}
	s[8] = 0;
 9c4:	8b 45 08             	mov    0x8(%ebp),%eax
 9c7:	83 c0 08             	add    $0x8,%eax
 9ca:	c6 00 00             	movb   $0x0,(%eax)
	return;
 9cd:	90                   	nop
}
 9ce:	83 c4 10             	add    $0x10,%esp
 9d1:	5b                   	pop    %ebx
 9d2:	5d                   	pop    %ebp
 9d3:	c3                   	ret    

000009d4 <strlen>:
 9d4:	8b 4c 24 04          	mov    0x4(%esp),%ecx
 9d8:	31 c0                	xor    %eax,%eax
 9da:	e3 08                	jecxz  9e4 <strlen+0x10>
 9dc:	48                   	dec    %eax
 9dd:	40                   	inc    %eax
 9de:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)
 9e2:	75 f9                	jne    9dd <strlen+0x9>
 9e4:	c3                   	ret    
 9e5:	66 90                	xchg   %ax,%ax
 9e7:	66 90                	xchg   %ax,%ax
 9e9:	66 90                	xchg   %ax,%ax
 9eb:	66 90                	xchg   %ax,%ax
 9ed:	66 90                	xchg   %ax,%ax
 9ef:	90                   	nop

000009f0 <api_putchar>:
 9f0:	ba 01 00 00 00       	mov    $0x1,%edx
 9f5:	8a 44 24 04          	mov    0x4(%esp),%al
 9f9:	cd 40                	int    $0x40
 9fb:	c3                   	ret    

000009fc <api_putstr>:
 9fc:	ba 02 00 00 00       	mov    $0x2,%edx
 a01:	8b 5c 24 04          	mov    0x4(%esp),%ebx
 a05:	cd 40                	int    $0x40
 a07:	c3                   	ret    

00000a08 <api_end>:
 a08:	ba 04 00 00 00       	mov    $0x4,%edx
 a0d:	cd 40                	int    $0x40

00000a0f <api_test>:
 a0f:	05 80 00 00 00       	add    $0x80,%eax
 a14:	c3                   	ret    

00000a15 <api_openwin>:
 a15:	57                   	push   %edi
 a16:	56                   	push   %esi
 a17:	53                   	push   %ebx
 a18:	ba 05 00 00 00       	mov    $0x5,%edx
 a1d:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 a21:	8b 74 24 14          	mov    0x14(%esp),%esi
 a25:	8b 7c 24 18          	mov    0x18(%esp),%edi
 a29:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 a2d:	8b 4c 24 20          	mov    0x20(%esp),%ecx
 a31:	cd 40                	int    $0x40
 a33:	5b                   	pop    %ebx
 a34:	5e                   	pop    %esi
 a35:	5f                   	pop    %edi
 a36:	c3                   	ret    

00000a37 <api_putstrwin>:
 a37:	57                   	push   %edi
 a38:	56                   	push   %esi
 a39:	55                   	push   %ebp
 a3a:	53                   	push   %ebx
 a3b:	ba 06 00 00 00       	mov    $0x6,%edx
 a40:	8b 5c 24 14          	mov    0x14(%esp),%ebx
 a44:	8b 74 24 18          	mov    0x18(%esp),%esi
 a48:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
 a4c:	8b 44 24 20          	mov    0x20(%esp),%eax
 a50:	8b 4c 24 24          	mov    0x24(%esp),%ecx
 a54:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 a58:	cd 40                	int    $0x40
 a5a:	5b                   	pop    %ebx
 a5b:	5d                   	pop    %ebp
 a5c:	5e                   	pop    %esi
 a5d:	5f                   	pop    %edi
 a5e:	c3                   	ret    

00000a5f <api_boxfilwin>:
 a5f:	57                   	push   %edi
 a60:	56                   	push   %esi
 a61:	55                   	push   %ebp
 a62:	53                   	push   %ebx
 a63:	ba 07 00 00 00       	mov    $0x7,%edx
 a68:	8b 5c 24 14          	mov    0x14(%esp),%ebx
 a6c:	8b 44 24 18          	mov    0x18(%esp),%eax
 a70:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
 a74:	8b 74 24 20          	mov    0x20(%esp),%esi
 a78:	8b 7c 24 24          	mov    0x24(%esp),%edi
 a7c:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 a80:	cd 40                	int    $0x40
 a82:	5b                   	pop    %ebx
 a83:	5d                   	pop    %ebp
 a84:	5e                   	pop    %esi
 a85:	5f                   	pop    %edi
 a86:	c3                   	ret    

00000a87 <api_initmalloc>:
 a87:	53                   	push   %ebx
 a88:	ba 08 00 00 00       	mov    $0x8,%edx
 a8d:	2e 8b 1d 20 00 00 00 	mov    %cs:0x20,%ebx
 a94:	89 d8                	mov    %ebx,%eax
 a96:	05 00 80 00 00       	add    $0x8000,%eax
 a9b:	2e 8b 0d 00 00 00 00 	mov    %cs:0x0,%ecx
 aa2:	29 c1                	sub    %eax,%ecx
 aa4:	cd 40                	int    $0x40
 aa6:	5b                   	pop    %ebx
 aa7:	c3                   	ret    

00000aa8 <api_malloc>:
 aa8:	53                   	push   %ebx
 aa9:	ba 09 00 00 00       	mov    $0x9,%edx
 aae:	2e 8b 1d 20 00 00 00 	mov    %cs:0x20,%ebx
 ab5:	8b 4c 24 08          	mov    0x8(%esp),%ecx
 ab9:	cd 40                	int    $0x40
 abb:	5b                   	pop    %ebx
 abc:	c3                   	ret    

00000abd <api_free>:
 abd:	53                   	push   %ebx
 abe:	ba 0a 00 00 00       	mov    $0xa,%edx
 ac3:	2e 8b 1d 20 00 00 00 	mov    %cs:0x20,%ebx
 aca:	8b 44 24 08          	mov    0x8(%esp),%eax
 ace:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
 ad2:	cd 40                	int    $0x40
 ad4:	5b                   	pop    %ebx
 ad5:	c3                   	ret    

00000ad6 <api_pointwin>:
 ad6:	57                   	push   %edi
 ad7:	56                   	push   %esi
 ad8:	53                   	push   %ebx
 ad9:	ba 0b 00 00 00       	mov    $0xb,%edx
 ade:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 ae2:	8b 74 24 14          	mov    0x14(%esp),%esi
 ae6:	8b 7c 24 18          	mov    0x18(%esp),%edi
 aea:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 aee:	cd 40                	int    $0x40
 af0:	5b                   	pop    %ebx
 af1:	5e                   	pop    %esi
 af2:	5f                   	pop    %edi
 af3:	c3                   	ret    

00000af4 <api_refreshwin>:
 af4:	57                   	push   %edi
 af5:	56                   	push   %esi
 af6:	53                   	push   %ebx
 af7:	ba 0c 00 00 00       	mov    $0xc,%edx
 afc:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 b00:	8b 44 24 14          	mov    0x14(%esp),%eax
 b04:	8b 4c 24 18          	mov    0x18(%esp),%ecx
 b08:	8b 74 24 1c          	mov    0x1c(%esp),%esi
 b0c:	8b 7c 24 20          	mov    0x20(%esp),%edi
 b10:	cd 40                	int    $0x40
 b12:	5b                   	pop    %ebx
 b13:	5e                   	pop    %esi
 b14:	5f                   	pop    %edi
 b15:	c3                   	ret    

00000b16 <api_linewin>:
 b16:	57                   	push   %edi
 b17:	56                   	push   %esi
 b18:	55                   	push   %ebp
 b19:	53                   	push   %ebx
 b1a:	ba 0d 00 00 00       	mov    $0xd,%edx
 b1f:	8b 5c 24 14          	mov    0x14(%esp),%ebx
 b23:	8b 44 24 18          	mov    0x18(%esp),%eax
 b27:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
 b2b:	8b 74 24 20          	mov    0x20(%esp),%esi
 b2f:	8b 7c 24 24          	mov    0x24(%esp),%edi
 b33:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 b37:	cd 40                	int    $0x40
 b39:	5b                   	pop    %ebx
 b3a:	5d                   	pop    %ebp
 b3b:	5e                   	pop    %esi
 b3c:	5f                   	pop    %edi
 b3d:	c3                   	ret    

00000b3e <api_closewin>:
 b3e:	53                   	push   %ebx
 b3f:	ba 0e 00 00 00       	mov    $0xe,%edx
 b44:	8b 5c 24 08          	mov    0x8(%esp),%ebx
 b48:	cd 40                	int    $0x40
 b4a:	5b                   	pop    %ebx
 b4b:	c3                   	ret    

00000b4c <api_getkey>:
 b4c:	ba 0f 00 00 00       	mov    $0xf,%edx
 b51:	8b 44 24 04          	mov    0x4(%esp),%eax
 b55:	cd 40                	int    $0x40
 b57:	c3                   	ret    

00000b58 <api_alloctimer>:
 b58:	ba 10 00 00 00       	mov    $0x10,%edx
 b5d:	cd 40                	int    $0x40
 b5f:	c3                   	ret    

00000b60 <api_inittimer>:
 b60:	53                   	push   %ebx
 b61:	ba 11 00 00 00       	mov    $0x11,%edx
 b66:	8b 5c 24 08          	mov    0x8(%esp),%ebx
 b6a:	8b 44 24 0c          	mov    0xc(%esp),%eax
 b6e:	cd 40                	int    $0x40
 b70:	5b                   	pop    %ebx
 b71:	c3                   	ret    

00000b72 <api_settimer>:
 b72:	53                   	push   %ebx
 b73:	ba 12 00 00 00       	mov    $0x12,%edx
 b78:	8b 5c 24 08          	mov    0x8(%esp),%ebx
 b7c:	8b 44 24 0c          	mov    0xc(%esp),%eax
 b80:	cd 40                	int    $0x40
 b82:	5b                   	pop    %ebx
 b83:	c3                   	ret    

00000b84 <api_freetimer>:
 b84:	53                   	push   %ebx
 b85:	ba 13 00 00 00       	mov    $0x13,%edx
 b8a:	8b 5c 24 08          	mov    0x8(%esp),%ebx
 b8e:	cd 40                	int    $0x40
 b90:	5b                   	pop    %ebx
 b91:	c3                   	ret    

00000b92 <api_beep>:
 b92:	ba 14 00 00 00       	mov    $0x14,%edx
 b97:	8b 44 24 04          	mov    0x4(%esp),%eax
 b9b:	cd 40                	int    $0x40
 b9d:	c3                   	ret    

00000b9e <api_fopen>:
 b9e:	53                   	push   %ebx
 b9f:	ba 15 00 00 00       	mov    $0x15,%edx
 ba4:	8b 5c 24 08          	mov    0x8(%esp),%ebx
 ba8:	cd 40                	int    $0x40
 baa:	5b                   	pop    %ebx
 bab:	c3                   	ret    

00000bac <api_fclose>:
 bac:	ba 16 00 00 00       	mov    $0x16,%edx
 bb1:	8b 44 24 04          	mov    0x4(%esp),%eax
 bb5:	cd 40                	int    $0x40
 bb7:	c3                   	ret    

00000bb8 <api_seek>:
 bb8:	53                   	push   %ebx
 bb9:	ba 17 00 00 00       	mov    $0x17,%edx
 bbe:	8b 44 24 08          	mov    0x8(%esp),%eax
 bc2:	8b 4c 24 10          	mov    0x10(%esp),%ecx
 bc6:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
 bca:	cd 40                	int    $0x40
 bcc:	5b                   	pop    %ebx
 bcd:	c3                   	ret    

00000bce <api_fsize>:
 bce:	ba 18 00 00 00       	mov    $0x18,%edx
 bd3:	8b 44 24 04          	mov    0x4(%esp),%eax
 bd7:	8b 4c 24 08          	mov    0x8(%esp),%ecx
 bdb:	cd 40                	int    $0x40
 bdd:	c3                   	ret    

00000bde <api_fread>:
 bde:	53                   	push   %ebx
 bdf:	ba 19 00 00 00       	mov    $0x19,%edx
 be4:	8b 44 24 10          	mov    0x10(%esp),%eax
 be8:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
 bec:	8b 5c 24 08          	mov    0x8(%esp),%ebx
 bf0:	cd 40                	int    $0x40
 bf2:	5b                   	pop    %ebx
 bf3:	c3                   	ret    

00000bf4 <api_cmdline>:
 bf4:	53                   	push   %ebx
 bf5:	ba 1a 00 00 00       	mov    $0x1a,%edx
 bfa:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
 bfe:	8b 5c 24 08          	mov    0x8(%esp),%ebx
 c02:	cd 40                	int    $0x40
 c04:	5b                   	pop    %ebx
 c05:	c3                   	ret    

00000c06 <api_getlang>:
 c06:	ba 1b 00 00 00       	mov    $0x1b,%edx
 c0b:	cd 40                	int    $0x40
 c0d:	c3                   	ret    
